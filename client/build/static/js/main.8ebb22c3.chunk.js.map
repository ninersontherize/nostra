{"version":3,"sources":["utils/setAuthToken.js","actions/types.js","actions/authActions.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/auth/EmailSent.js","components/private-route/PrivateRoute.js","actions/leagueActions.js","actions/wagerActions.js","actions/userActions.js","actions/teamActions.js","actions/matchActions.js","components/dashboard/NewDashboard.js","components/league/CreateLeague.js","components/league/SearchLeague.js","components/match/SearchMatch.js","components/match/ShowMatch.js","components/auth/ForgotPassword.js","components/auth/ResetPassword.js","components/league/JoinLeague.js","components/league/MyLeagues.js","components/wager/MyWagers.js","components/user/UserProfile.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","GET_ERRORS","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","isEmpty","require","initialState","isAuthenticated","user","loading","combineReducers","auth","state","action","errors","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","Navbar","onLogoutClick","e","preventDefault","props","logout_button","undefined","this","id","className","onClick","to","style","fontFamily","Component","connect","Landing","height","width","borderRadius","letterSpacing","Register","onChange","setState","target","value","onSubmit","newUser","name","email","username","password","password2","registerUser","history","push","nextProps","paddingLeft","noValidate","error","classnames","invalid","htmlFor","marginTop","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","emailnotfound","passwordincorrect","setItem","jwt_decode","EmailSent","component","rest","render","showLeague","searchData","get","getMyLeagues","params","user_id","getCurrentPlayers","leagueData","league_id","console","log","getMyWagers","getLeagueInfo","user_league_id","showUser","showTeam","teamData","searchMatch","search","NewDashboard","renderOdds","odd_type","odd","onFavoriteClick","favoriteUser","renderOddType","renderMatchTime","datetime","getHours","getMinutes","getOpponent","home_team","home_team_logo","away_team_logo","UNSAFE_componentWillReceiveProps","location","key","reload","wager_search_results","wager_empty","league_search_results","leagues_empty","match_search_results","follower_results","status","earnings","favorite_team_logo","lifetime_earnings_cash","lifetime_earnings_pct","favorite_team","team_res","logo_large","getFollowing","forEach","row","followee_id","user_info","favorite","follower_id","_id","concat","sort","a","b","length","lifetime_starting_cash","lifetime_bankroll","league","bankroll","user_bankroll","bankroll_percent_change","starting_cash","toFixed","wagers_empty","user_league","league_name","team_id","match","team_logo","logo_small","away_team","closed","winning_id","league_table","wager_table","map","scope","match_id","src","process","amount","conponent","scopt","wager_type","odds","split","class","pageSize","tournament","tournament_logo","Date","match_date","toDateString","short_name","money_line_home","money_line_away","spread_home","spread_away","followerId","put","OPTIONS","CreateLeague","updateLeaguesSupported","newLeague","game","leagues_supported","filter","v","i","indexOf","private","max_players","in_progress","league_owner","createLeague","Object","keys","checkboxes","checkbox","addedLeagues","handleCheckboxChange","changeEvent","prevState","handleSwitchChange","event","reduce","options","option","color","checked","label","placeholder","SearchLeague","searchLeague","search_results","aria-label","sub_row","SearchMatch","renderPositiveOdds","search_values","queryString","parse","searchMatchByDateRange","start_date","end_date","ShowMatch","onLeagueChange","showUserLeague","available_funds","wager_odds","wager_info","wager_team","wagerData","wager_user_league","wager_league","wager_amount","wager_match","createWager","getWinner","renderMoney","money","losing_id","gold_difference","my_leagues","match_complete","updateMatchTeams","showMatch","items_processed","league_row","includes","M","AutoInit","wager_section","match_time","home_logo","away_logo","disabled","selected","alt","title","wins","losses","matchId","ForgotPassword","sendForgotEmail","ResetPassword","confirm_password","updatePassword","tokenData","resetPasswordToken","validateToken","classname","JoinLeague","joinData","joinLeague","current_player_count","current_players","season_in_progress","private_league","user_exists","checkCurrentUserMembership","button","table","align","MyLeagues","player_res","MyWagers","renderWin","win","complete","UserProfile","onFollowClick","followData","followUser","onUnfollowClick","unfollowUser","wager_wins_search_results","wager_wins_empty","wager_losses_search_results","wager_losses_empty","is_followed","checkFollowed","getFollowers","getTopWins","getTopLosses","wager_win_table","wager_loss_table","follow_button","payout","userInfo","follower","followee","delete","jwtToken","currentTime","now","exp","href","App","basename","exact","path","Dashboard","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ebb22c3.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;","export const GET_ERRORS = \"GET_ERRORS\";\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport {\n  SET_CURRENT_USER,\n  USER_LOADING,\n  GET_ERRORS\n} from \"./types\";\n\n//Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\")) //re-direct to login on successful register\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      //Save to localStorage\n      const { token } = res.data;\n      //Set token to localStorage\n      localStorage.setItem(\"jwtToken\", token);\n      //Set token to Auth header\n      setAuthToken(token);\n      //Decode token to get user data\n      const decoded = jwt_decode(token);\n      //Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//send email with unique token to reset password\nexport const sendForgotEmail = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/users/forgotPassword\", userData)\n    .then(res => history.push(\"/emailSent\")) //send to static success page on success\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const validateToken = tokenData => dispatch => {\n  return axios\n    .post(\"/api/users/validateToken\", tokenData)\n    .then(res => {\n      return res.data.email;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const updatePassword = (userData, history) => dispatch => {\n  axios \n    .put(\"/api/users/updatePassword\", userData)\n    .then(res => {\n      history.push(\"/login\"); \n    }) //re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n};\n\n//User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n//Log user out\nexport const logoutUser = () => dispatch => {\n  //Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  //Remove auth header for future requests\n  setAuthToken(false);\n  //Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","import {\n  SET_CURRENT_USER,\n  USER_LOADING\n} from \"../actions/types\";\n\nconst isEmpty = require(\"is-empty\");\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}","import { combineReducers } from \"redux\";\nimport authReducer from \"./authReducer\";\nimport errorReducer from \"./errorReducer\";\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer\n});","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && \n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() || \n    compose\n  )\n);\n\nexport default store;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions/authActions\";\n\nclass Navbar extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n  componentDidMount() {\n    \n  }\n\n  render() {\n    var logout_button;\n\n    if (this.props.auth.user.id !== undefined) {\n      logout_button =   <ul id=\"nav-mobile\" className=\"right nostra-nav\">\n                          <li className=\"nostra-nav\">\n                            <button\n                            onClick={this.onLogoutClick}\n                            className=\"btn-flat waves-effect waves-light\"\n                            >\n                            Logout\n                            </button>\n                          </li>\n                        </ul>\n    }\n\n    return (\n      <div className=\"navbar-fixed\">\n        <nav className=\"z-depth-0\">\n          <div className=\"nav-wrapper white\">\n            <Link\n              to=\"/dashboard\"\n              style={{\n                fontFamily: \"monospace\"\n              }}\n              className=\"col s5 center brand-logo black-text nostra-nav\">\n                <i className=\"material-icons\">gamepad</i>\n                nostra.gg\n              </Link>\n              {logout_button}\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Navbar);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div style={{ height: \"75vh\" }} className=\"container valign-wrapper\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h5>\n              Ever feel like you just <b>know</b> who's going to win?\n            </h5>\n            <p className=\"flow-text grey-text text-darken-1\">\n              Use strategy and game knowledge to predict wins, bank gold, and beat your friends.\n            </p>\n            <br />\n            <div className=\"col s6\">\n              <Link\n                to=\"/register\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-flat waves effect waves-light hoverable nostra-button\">\n                  Register\n                </Link>\n            </div>\n            <div className=\"col s6\">\n              <Link\n                to=\"/login\"\n                style={{\n                  width: \"140px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\"\n                }}\n                className=\"btn btn-flat waves-effect white black-text\">\n                  Log In\n                </Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing;","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\"\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      password2: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      username: this.state.username,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const{ errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>Register</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Already have an account? <Link to=\"/login\">Log in</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n            <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.name}\n                  error={errors.name}\n                  id=\"name\"\n                  type=\"text\"\n                  className={classnames('', { invalid: errors.name })}\n                />\n                <label htmlFor=\"name\">Name</label>\n                <span className=\"red-text\">{errors.name}</span>\n              </div>\n              <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames('', { invalid: errors.email })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">{errors.email}</span>\n              </div>\n              <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.username}\n                  error={errors.username}\n                  id=\"username\"\n                  type=\"text\"\n                  className={classnames('', { invalid: errors.username })}\n                />\n                <label htmlFor=\"username\">Username</label>\n                <span className=\"red-text\">{errors.username}</span>\n              </div>\n              <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames('', { invalid: errors.password })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">{errors.password}</span>\n              </div>\n              <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password2}\n                  error={errors.password2}\n                  id=\"password2\"\n                  type=\"password\"\n                  className={classnames('', { invalid: errors.password2 })}\n                />\n                <label htmlFor=\"password2\">Confirm Password</label>\n                <span className=\"red-text\">{errors.password2}</span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                    Sign up\n                  </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport classnames from \"classnames\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\"); //push user to dashboard when they login\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n\n    this.props.loginUser(userData);\n    //Since we handle the redirect within this componenet we dont need to pass .history as a param\n  };\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to Home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>Login</b> below\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Don't have an account? <Link to=\"/register\">Register</Link>\n              </p>\n              <p className=\"grey-text text-darken-1\">\n                Forget your password? <Link to=\"/forgotPassword\">Reset your Password</Link>\n              </p>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.email}\n                  error={errors.email}\n                  id=\"email\"\n                  type=\"email\"\n                  className={classnames(\"\", { invalid: errors.email || errors.emailnotfound })}\n                />\n                <label htmlFor=\"email\">Email</label>\n                <span className=\"red-text\">\n                  {errors.email}\n                  {errors.emailnotfound}\n                </span>\n              </div>\n              <div className=\"input-field col s8 offset-s2\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.password}\n                  error={errors.password}\n                  id=\"password\"\n                  type=\"password\"\n                  className={classnames(\"\", { invalid: errors.password || errors.passwordincorrect })}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <span className=\"red-text\">\n                  {errors.password}\n                  {errors.passwordincorrect}\n                </span>\n              </div>\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <button\n                  style={{\n                    width: \"150px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                    Login\n                  </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n\nclass EmailSent extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\n          <div className=\"col s9 offset-s2\">\n            <Link to=\"/\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to Home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>Email</b> sent successfully!\n              </h4>\n              <p className=\"grey-text text-darken-1\">\n                Your reset link is on its way! Please allow a few minutes for it to show up in your inbox.\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nEmailSent.propTypes = {\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps)(EmailSent);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => auth.isAuthenticated === true ? (<Component {...props} />) : (<Redirect to=\"/login\" />)} />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import axios from \"axios\";\n\nimport {\n  GET_ERRORS\n} from \"./types\";\n\n//Create League\nexport const createLeague = (userData, history) => dispatch => {\n  console.log(userData);\n  axios\n    .post(\"/api/leagues/createLeague\", userData)\n    .then(res => history.push(\"/myLeagues\")) //re-direct to dashboard on successful creation\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Search for League\nexport const searchLeague = searchData => dispatch => {\n  return axios\n    .get(\"/api/leagues/leagues\", {\n      params: {\n        search: searchData\n      }\n    })\n    .then(res => {\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//show info for one specific league\nexport const showLeague = searchData => dispatch => {\n  return axios\n    .get(`/api/leagues/${searchData}/leagues`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//get league ids for a specific user -> returns userleague objects\nexport const getMyLeagues = searchData => dispatch => {\n  return axios\n    .get(\"/api/leagues/getMyLeagues\", {\n      params: {\n        user_id: searchData\n      }\n    })\n    .then(res => {\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//show info for one specific league\nexport const showUserLeague = searchData => dispatch => {\n  return axios\n    .get(`/api/leagues/${searchData}/userLeague`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Join a league\nexport const joinLeague = (joinData, history) => dispatch => {\n  axios\n    .post(\"/api/leagues/addUserLeague\", joinData)\n    .then(res => history.push(\"/dashboard\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const getCurrentPlayers = leagueData => dispatch => {\n  return axios\n    .get(\"/api/leagues/getCurrentPlayers\", {\n      params: {\n        league_id: leagueData\n      }\n    })\n    .then(res => {\n      console.log(res.data);\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const checkCurrentUserMembership = userData => dispatch => {\n  return axios\n    .get(\"/api/leagues/checkCurrentUserMembership\", {\n      params: {\n        user_id: userData.user_id,\n        league_id: userData.league_id\n      }\n    })\n    .then(res => {\n      return res.data\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};","import axios from \"axios\";\n\nimport {\n  GET_ERRORS\n} from \"./types\";\n\n//Create League\nexport const createWager = (wagerData, history) => dispatch => {\n  console.log(wagerData);\n  axios\n    .post(\"/api/wagers/createWager\", wagerData)\n    .then(res => history.push(\"/dashboard\")) //re-direct to searchMatch on successful creation\n    .catch(err => \n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Get myWagers\nexport const getMyWagers = user_id => dispatch => {\n  return axios\n    .get(`/api/wagers/${user_id}/myWagers`)\n    .then(res => {return res.data;})\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//Get user_league\nexport const getLeagueInfo = user_league_id => dispatch => {\n  return axios\n    .get(`/api/leagues/${user_league_id}/userLeague`)\n    .then(res => {return res.data;})\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n}\n\n//Get top 5 biggest wins for a given user\nexport const getTopWins = userInfo => dispatch => {\n  return axios\n    .get(`/api/wagers/topWins/${userInfo}`)\n    .then(res => {return res.data;})\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n}\n\n//Get top 5 biggest losses for a given user\nexport const getTopLosses = userInfo => dispatch => {\n  return axios\n    .get(`/api/wagers/${userInfo}/topLosses`)\n    .then(res => {return res.data;})\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n}","import axios from \"axios\";\n\nimport {\n  GET_ERRORS\n} from \"./types\";\n\n//show info for a user\nexport const showUser = userData => dispatch => {\n  return axios\n    .get(`/api/users/${userData}/showUser`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//get all users that a given user is following\nexport const getFollowing = userData => dispatch => {\n  return axios\n    .get(\"/api/followers/followers\", {\n      params: {\n        type: \"followees\",\n        search: userData\n      }\n    })\n    .then(res => {\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//get all followers of a given user is following\nexport const getFollowers = userData => dispatch => {\n  return axios\n    .get(\"/api/followers/followers\", {\n      params: {\n        type: \"followers\",\n        search: userData\n      }\n    })\n    .then(res => {\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//check to see if a user is following another user\nexport const checkFollowed = (follower, followee) => dispatch => {\n  return axios\n    .get(\"/api/followers/checkFollowed\", {\n      params: {\n        follower: follower,\n        followee: followee\n      }\n    })\n    .then(res => {\n      return res.data\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//create new follower record\nexport const followUser = (followData, history) => dispatch => {\n  axios\n    .post(\"/api/followers/createFollower\", followData)\n    .then(res => history.push(`/userProfile/${followData.followee_id}`))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//create new follower record\nexport const unfollowUser = (followData, history) => dispatch => {\n  axios\n    .delete(\"/api/followers/deleteFollower\", {\n      params: {\n        follower_id: followData.follower_id,\n        followee_id: followData.followee_id\n      }\n    })\n    .then(res => history.push(`/userProfile/${followData.followee_id}`))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n//favorite a user given a follower id\nexport const favoriteUser = (followerId, history) => dispatch => {\n  axios\n    .put(`/api/followers/${followerId}/editFavorite`)\n    .then(res => history.push(\"/dashboard\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};","import axios from \"axios\";\n\nimport {\n  GET_ERRORS\n} from \"./types\";\n\n//show info for a user\nexport const showTeam = teamData => dispatch => {\n  return axios\n    .get(`/api/teams/${teamData}/showTeam`)\n    .then(res => {\n      return res.data;\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n","import axios from \"axios\";\r\n\r\nimport {\r\n  GET_ERRORS\r\n} from \"./types\";\r\n\r\n//Search for Match\r\nexport const searchMatch = searchData => dispatch => {\r\n  return axios\r\n    .get(\"/api/matches/matches\", {\r\n      params: {\r\n        search: searchData\r\n      }\r\n    })\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n//Search for Match by Date range\r\nexport const searchMatchByDateRange = searchData => dispatch => {\r\n  return axios\r\n    .get(\"/api/matches/matchesByDate\", {\r\n      params: {\r\n        start_date: searchData.start_date,\r\n        end_date: searchData.end_date\r\n      }\r\n    })\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\n//show info for one specific match\r\nexport const showMatch = searchData => dispatch => {\r\n  return axios\r\n    .get(`/api/matches/${searchData}/match`)\r\n    .then(res => {\r\n      return res.data;\r\n    })\r\n    .catch(err => \r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateTeamRecords = teamId => dispatch => {\r\n  axios\r\n    .put(`api/teams/${teamId}/updateRecord`)\r\n    .then(res => res.data)\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n\r\nexport const updateMatchTeams = matchId => dispatch => {\r\n  axios\r\n    .put(`/api/matches/${matchId}/getLatestTeams`)\r\n    .then(res => res.data)\r\n    .catch(err =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n      })\r\n    );\r\n};\r\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getMyLeagues, showLeague } from \"../../actions/leagueActions\";\nimport { getMyWagers, getLeagueInfo } from \"../../actions/wagerActions\";\nimport { showUser, getFollowing, favoriteUser } from \"../../actions/userActions\";\nimport { showTeam } from \"../../actions/teamActions\";\nimport { searchMatch } from \"../../actions/matchActions\";\n\n\nclass NewDashboard extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      wager_search_results: [],\n      wager_empty: false,\n      league_search_results: [],\n      leagues_empty: false,\n      match_search_results: [],\n      follower_results: [],\n      username: \"\",\n      status: \"\",\n      earnings: \"\",\n      favorite_team_logo: \"\",\n      lifetime_earnings_cash: \"\",\n      lifetime_earnings_pct: \"\",\n      errors: {}\n    };\n  }\n\n  renderOdds = (odd_type, odd) => {\n    if(odd > 0 && odd_type === \"spread\") {\n      return `+${odd/1000} K`;\n    } else if (odd < 0 && odd_type === \"spread\") {\n      return `${odd/1000} K`;\n    } else if (odd > 0) {\n      return `+${odd}`;\n    } else {\n      return odd;\n    }\n  };\n\n  onFavoriteClick = id => {\n    this.props.favoriteUser(id, this.props.history);\n  }\n\n  renderOddType = odd_type => {\n    if (odd_type === \"spread\") {\n      return \"Spread\";\n    } else {\n      return \"Money Line\";\n    }\n  };\n\n  renderMatchTime = datetime => {\n    let match_hour = (datetime.getHours() % 12);\n    let match_minute = (datetime.getMinutes() < 10) ? \"0\" + datetime.getMinutes() : datetime.getMinutes();\n    let match_trailer = (datetime.getHours() > 11) ? \" PM\" : \" AM\";\n    return match_hour + \":\" + match_minute + match_trailer;\n  };\n\n  getOpponent = (id, home_team, home_team_logo, away_team_logo) => {\n    if (id === home_team) {\n      return away_team_logo;\n    } else {\n      return home_team_logo;\n    }\n  };\n\n  UNSAFE_componentWillReceiveProps = nextProps => {\n    if(nextProps.location.key !== this.props.location.key) {\n      window.location.reload();\n    }\n  };\n\n  componentDidMount() {\n\n    this.props.showUser(this.props.auth.user.id).then(res => {\n      if (res.favorite_team === null || res.favorite_team === undefined) {\n        this.setState({\n          username: res.username,\n          status: res.status,\n          favorite_team_logo: \"/lcs/lcs_logo.png\"\n        });\n      } else {\n        this.props.showTeam(res.favorite_team).then(team_res => {\n          this.setState({\n            username: res.username,\n            status: res.status,\n            favorite_team_logo: team_res.logo_large\n          });\n        });\n      }\n    });\n\n    this.props.getFollowing(this.props.auth.user.id).then(res => {\n      console.log(res);\n      res.forEach(row => {\n        this.props.showUser(row.followee_id).then(user_info => {\n          user_info.favorite = row.favorite\n          user_info.follower_id = row._id\n          this.setState({\n            follower_results: this.state.follower_results.concat(user_info).sort((a, b) => (a.favorite < b.favorite) ? 1 : -1)\n          });\n        });\n      });\n    });\n\n    this.props.getMyLeagues(this.props.auth.user.id).then(res => {\n      if (res.length === 0) {\n        this.setState({\n          leagues_empty: true\n        });\n      }\n      var lifetime_starting_cash = 0;\n      var lifetime_bankroll = 0;\n      res.forEach(row => {\n        this.props.showLeague(row.league._id).then(res => {\n          res.bankroll = row.user_bankroll;\n          res.bankroll_percent_change = row.bankroll_percent_change;\n\n          lifetime_bankroll = lifetime_bankroll + row.user_bankroll;\n          lifetime_starting_cash = lifetime_starting_cash + res.starting_cash;\n        \n          this.setState({ \n            league_search_results: this.state.league_search_results.concat(res).sort((a, b) => (a.bankroll_percent_change < b.bankroll_percent_change) ? 1 : -1),\n            lifetime_earnings_cash: lifetime_bankroll - lifetime_starting_cash,\n            lifetime_earnings_pct: ((lifetime_bankroll - lifetime_starting_cash)/lifetime_starting_cash*100).toFixed(2),\n          });\n        });\n      });\n    });\n\n    this.props.getMyWagers(this.props.auth.user.id).then(res => {\n      if (res.length === 0) {\n        this.setState({\n          wagers_empty: true\n        });\n      }\n      res.forEach(row => {\n        this.props.getLeagueInfo(row.user_league_id).then(user_league => {\n          row.league_name = user_league.league.name;\n          row.league_id = user_league.league._id;\n          if (row.team_id === row.match.home_team._id) {\n            row.team_logo = row.match.home_team.logo_small;\n          } else {\n            row.team_logo = row.match.away_team.logo_small;\n          }\n          if (row.closed === null) {\n            this.setState({\n              wager_search_results: this.state.wager_search_results.concat(row)\n            });\n          }\n        });\n      });\n    });\n\n    this.props.searchMatch().then(res => {\n      res.forEach(row => {\n        if (row.winning_id === null) {\n          this.setState({\n            match_search_results: this.state.match_search_results.concat(row)\n          });\n        }\n      });\n    });\n\n  };\n\n  render() {\n    const { user } = this.props.auth;\n\n    var league_table;\n    var wager_table;\n    var follow_button;\n\n    if (this.state.wager_empty === true) {\n      wager_table = \n                    <div className=\"section\">\n                      <div className=\"row\">\n                        <span className=\"flow-text dash-info-text\">\n                          This user hasn't won any wagers yet, check back soon.\n                        </span>\n                      </div>\n                    </div>\n    } else {      \n      wager_table = <table className={(this.state.wager_search_results.length < 5) ? \"highlight dash-table-center\" : \"highlight dash-table-center long-table\"}>\n                      <thead>\n                        <tr>\n                          <th>League</th>\n                          <th className=\"center-align\">Pick</th>\n                          <th className=\"center-align\">Amount</th>\n                          <th></th>\n                          <th className=\"center-align\">Match</th>\n                          <th></th>\n                          <th className=\"center-align\">Odds</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.wager_search_results.map(row => (\n                          <tr className=\"dash-row\" key={row._id}>\n                            <td className=\"dash-league-name\" component=\"th\" scope=\"row\">\n                              <Link className=\"dash-link\" to={`/joinLeague/${row.league_id}`}>\n                                {row.league_name}\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">\n                              <Link to={`/showMatch/${row.match_id}`}>\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.team_logo} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">{row.amount}g</td>\n                            <td className=\"right-align\" component=\"th\" scope=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.home_team.logo_small} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\" conponent=\"th\" scopt=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <span className=\"versus-small\">vs.</span>\n                              </Link>\n                            </td>\n                            <td className=\"left-align\" component=\"th\" scope=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.away_team.logo_small} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">\n                              <div className=\"row dash-text-container\">\n                                <span className=\"dash-spread-label\">{this.renderOddType(row.wager_type)}</span>\n                              </div>\n                              <div className=\"row dash-text-container\"> \n                                <span className={row.odds > 0 ? \"dash-info-value-green\" : \"dash-info-value-red\"}>{this.renderOdds(row.wager_type, row.odds)}</span> \n                              </div>\n                            </td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>;\n    }\n\n    if ((this.state.leagues_empty === false)) {\n      league_table =  <div className=\"row\">\n                        <Link className=\"dash-link\" to='/searchLeague'>\n                          <h4 className=\"profile-sub-title\">\n                            Leagues\n                          </h4>\n                        </Link>\n                        <table className=\"striped\">\n                          <tbody>\n                            {this.state.league_search_results.map(row => (\n                              <tr className=\"dash-row\" key={row._id}>\n                                <td className=\"dash-league-name\" component=\"th\" scope=\"row\">\n                                  <Link className=\"dash-link\" to={`/joinLeague/${row._id}`}>\n                                    {row.name}\n                                  </Link>\n                                </td>\n                                <td className={row.bankroll_percent_change > 0 ? \"dash-info-value-green center-align\" : \"dash-info-value-red center-align\"}>{row.bankroll_percent_change}%</td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n    }\n\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4 className=\"header-text\">\n              <b>Hey there,</b> {user.name.split(\" \")[0]}\n            </h4>\n            <div className=\"divider\"></div>\n            <div className=\"section\">\n              <div className=\"row\">\n                <div className=\"profile-info-container col s3\">\n                  <div className=\"row\"> \n                    <img className=\"profile-team-img\" src={process.env.PUBLIC_URL + this.state.favorite_team_logo} />                 \n                    <h5 className=\"username-header\">\n                      {this.state.username}\n                    </h5>                    \n                  </div>\n                  <div className=\"row\">\n                    <span className=\"user-status\">\n                      <b>Status:</b> {this.state.status}\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"user-status\">\n                      <b>Total Earnings:</b> <span className={this.state.lifetime_earnings_cash > 0 ? \"dash-info-value-green\" : \"dash-info-value-red\"}>{this.renderOdds(\"none\", this.state.lifetime_earnings_cash)}g <br/>({this.renderOdds(\"none\", this.state.lifetime_earnings_pct)}%)</span>\n                    </span>\n                  </div>\n                  <div className=\"divider\" />\n                  {league_table}\n                  <div className=\"divider\" />\n                  <div className=\"row\">\n                    <h4 className=\"profile-sub-title\">\n                      Following\n                    </h4>\n                    <div className=\"follower-table-container\">\n                      <table className=\"striped long-table\">\n                        <thead className=\"long-table\">\n                        </thead>\n                        <tbody className=\"long-table\">\n                          {this.state.follower_results.map(row => (\n                            <tr className=\"dash-row\" key={row._id}>\n                              <td className=\"left-align\">\n                                <Link className=\"dash-link\" to={`/userProfile/${row._id}`}>\n                                  {row.username}\n                                </Link>\n                              </td>\n                              <td className=\"center-align\">\n                              <button\n                                className=\"btn-flat\"\n                                onClick={() => this.onFavoriteClick(row.follower_id)}>\n                                  {(row.favorite === true) ? <i class=\"material-icons\">star</i> : <i class=\"material-icons\">star_border</i>}\n                              </button>\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"user-profile-table-container col s9\">\n                  <h4 className=\"dash-sub-title\">\n                    <Link className=\"dash-link\" to=\"/myWagers\">\n                      <b>Open</b> Wagers\n                    </Link>\n                  </h4>\n                  {wager_table}\n                  <div className=\"divider\"></div>\n                  <h4 className=\"dash-sub-title\">\n                    <Link className=\"dash-link\" to=\"/searchMatch\">\n                      <span><b>Upcoming</b> Matches</span>\n                    </Link>\n                  </h4>                 \n                  <table className=\"highlight dash-table-center long-table\" pageSize={(this.state.match_search_results.length > 3) ? 3 : this.state.match_search_results.length}>\n                    <thead className=\"long-table\">\n                      <tr>\n                        <th>League</th>\n                        <th className=\"left-align\">Match Date</th>\n                        <th></th>\n                        <th className=\"center-align\">Match</th>\n                        <th></th>\n                        <th className=\"left-align\">Money Line</th>\n                        <th className=\"left-align\">Spread</th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"long-table\">\n                      {this.state.match_search_results.map(row => (\n                        <tr className=\"dash-row\" key={row._id}>\n                          <td>\n                            <Link to={`/searchMatch?search=${row.tournament.name}`}>   \n                              <img className=\"search-match-tournament-img\" src={process.env.PUBLIC_URL + row.tournament.tournament_logo} />\n                            </Link>\n                          </td>\n                          <td>\n                            <div className=\"row search-info-row-container\">\n                              <span className=\"search-info-datetime\">{new Date(row.match_date).toDateString()}</span>\n                            </div>\n                            <div className=\"row search-info-row-container\">\n                              <span className=\"search-info-datetime\">{this.renderMatchTime(new Date(row.match_date))}</span>\n                            </div>\n                          </td>\n                          <td className=\"right-align\" component=\"th\" scope=\"row\">           \n                            <Link to={`/searchMatch?search=${row.home_team.short_name}`}> \n                              <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.home_team.logo_small} />\n                            </Link>\n                          </td>\n                          <td className=\"center-align\" component=\"th\" scope=\"row\">\n                            <span className=\"versus-small\"> vs. </span>\n                          </td>\n                          <td className=\"left-align\" component=\"th\" scope=\"row\">\n                            <Link to={`/searchMatch?search=${row.away_team.short_name}`}>   \n                              <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.away_team.logo_small} />\n                            </Link>\n                          </td>\n                          <td className=\"left-align\">\n                            <div className=\"row search-info-row-container\">\n                              <span className=\"search-info-label\">{row.home_team.short_name}: </span> \n                              <span className={row.money_line_home > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderOdds(\"money_line\", row.money_line_home)}</span> \n                            </div>\n                            <div className=\"row search-info-row-container\">\n                              <span className=\"search-info-label\">{row.away_team.short_name}: </span>\n                              <span className={row.money_line_away > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderOdds(\"money_line\", row.money_line_away)}</span>\n                            </div>\n                          </td>\n                          <td className=\"left-align\">\n                            <div className=\"row search-info-row-container\">\n                              <span className=\"search-info-label\">{row.home_team.short_name}: </span> \n                              <span className={row.spread_home > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderOdds(\"spread\", row.spread_home)}</span> \n                            </div>\n                            <div className=\"row search-info-row-container\">\n                              <span className=\"search-info-label\">{row.away_team.short_name}: </span>\n                              <span className={row.spread_away > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderOdds(\"spread\", row.spread_away)}</span>\n                            </div>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n\n}\n\nNewDashboard.propTypes = {\n  getMyLeagues: PropTypes.func.isRequired,\n  showLeague: PropTypes.func.isRequired,\n  getLeagueInfo: PropTypes.func.isRequired,\n  showUser: PropTypes.func.isRequired,\n  showTeam: PropTypes.func.isRequired,\n  getMyWagers: PropTypes.func.isRequired,\n  getFollowing: PropTypes.func.isRequired,\n  searchMatch: PropTypes.func.isRequired,\n  favoriteUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getMyLeagues, showLeague, getLeagueInfo, showTeam, showUser, getMyWagers, getFollowing, searchMatch, favoriteUser})(withRouter(NewDashboard));","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { createLeague } from \"../../actions/leagueActions\";\nimport classnames from \"classnames\"\n\nconst OPTIONS = [\"LCS\", \"LEC\"];\n\nclass CreateLeague extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      game: \"League of Legends\",\n      leagues_supported: [],\n      checkboxes: OPTIONS.reduce(\n        (options, option) => ({\n          ...options,\n          [option]: false\n        }),\n        {}\n      ),\n      private: false,\n      max_players: \"\",\n      starting_cash: 5000,\n      in_progress: false,\n      errors: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n\n    await this.updateLeaguesSupported();\n\n    const newLeague = {\n      name: this.state.name,\n      game: this.state.game,\n      leagues_supported: this.state.leagues_supported.filter((v, i, a) => a.indexOf(v) === i),\n      private: this.state.private,\n      max_players: this.state.max_players,\n      starting_cash: this.state.starting_cash,\n      in_progress: this.state.in_progress,\n      league_owner: this.props.auth.user.id,\n      user_id: this.props.auth.user.id\n    };\n\n    this.props.createLeague(newLeague, this.props.history);\n  };\n\n  updateLeaguesSupported = () => {\n    Object.keys(this.state.checkboxes)\n    .filter(checkbox => this.state.checkboxes[checkbox])\n    .forEach(checkbox => {\n      let addedLeagues = this.state.leagues_supported.concat(checkbox);\n      this.setState({ leagues_supported: addedLeagues }, () => {\n        console.log(this.state.leagues_supported);\n      });\n    });\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  handleCheckboxChange = changeEvent => {\n    const { name } = changeEvent.target;\n    console.log(\"checkbox changed!\");\n    this.setState(prevState => ({\n      checkboxes: {\n        ...prevState.checkboxes,\n        [name]: !prevState.checkboxes[name]\n      }\n    }));\n  };\n  \n  handleSwitchChange = event => {\n    const { name } = event.target;\n    console.log(event.target.value);\n    this.setState({ [name]: !this.state.private }, () => {\n      console.log(this.state.private);\n    });\n  };\n\n  render() {\n    const{ errors } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>Create</b> a league\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"section\">\n                <div className=\"row row-input-field\">\n                  <div className=\"input-field col s8 offset-s2\">\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.name}\n                      error={errors.name}\n                      id=\"name\"\n                      type=\"text\"\n                      className={classnames('', { invalid: errors.name })}\n                    />\n                    <label htmlFor=\"name\">League Name</label>\n                    <span className=\"red-text\">{errors.name}</span>\n                  </div>\n                </div>\n                <div className=\"row row-input-field-bottom\">\n                  <div className=\"input-field col s8 offset-s2\">\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.max_players}\n                      error={errors.max_players}\n                      id=\"max_players\"\n                      type=\"number\"\n                      className={classnames('', { invalid: errors.max_players })}\n                    />\n                    <label htmlFor=\"name\">Number of Players</label>\n                    <span className=\"red-text\">{errors.max_players}</span>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"create-league-checkbox-container\">\n                    <label component=\"legend\">Select which leagues you'll be able to place bets on</label>\n                    <div className=\"section\">\n                      <div className=\"row\">\n                        <div className=\"col s3 offset-s3\">\n                          <label>\n                            <input type=\"checkbox\" color=\"primary\" name=\"LCS\" checked={this.state.checkboxes[\"LCS\"]} onChange={this.handleCheckboxChange} value=\"lcs\" />\n                            <span><img className=\"search-match-tournament-img\" src={process.env.PUBLIC_URL + \"/lcs/lcs_logo.png\"} /></span>\n                          </label>\n                        </div>\n                        <div className=\"col s3\">\n                          <label>\n                            <input type=\"checkbox\" color=\"primary\" name=\"LEC\" checked={this.state.checkboxes[\"LEC\"]} onChange={this.handleCheckboxChange} value=\"lec\" />\n                            <span><img className=\"search-match-tournament-img\" src={process.env.PUBLIC_URL + \"/lec/lec_logo.png\"} /></span>\n                          </label>\n                        </div>\n                      </div>         \n                    </div>            \n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"switch\">\n                    <label>\n                      Public\n                      <input type=\"checkbox\" color=\"primary\" name=\"private\" checked={this.state.private} onChange={this.handleSwitchChange} value=\"private\" \n                      label=\"Private\" />\n                      <span className=\"lever\"></span>\n                      Private\n                    </label>\n                  </div>\n                </div>\n                <div className=\"row row-input-field\">\n                  <div className=\"input-field col s8 offset-s2\">\n                    <input\n                      placeholder={this.starting_cash}\n                      onChange={this.onChange}\n                      value={this.state.starting_cash}\n                      error={errors.starting_cash}\n                      id=\"starting_cash\"\n                      type=\"number\"\n                      className={classnames('', { invalid: errors.starting_cash })}\n                    />\n                    <label htmlFor=\"name\">Starting Gold</label>\n                    <span className=\"red-text\">{errors.starting_cash}</span>\n                  </div>\n                </div>\n                <div className=\"row\">\n                  <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                      style={{\n                        width: \"250px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                      }}\n                      type=\"submit\"\n                      className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                        Create League\n                      </button>\n                  </div>\n                </div>\n\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCreateLeague.propTypes = {\n  createLeague: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { createLeague })(withRouter(CreateLeague));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { searchLeague } from \"../../actions/leagueActions\";\nimport classnames from \"classnames\"\n\nconst isEmpty = require(\"is-empty\");\n\nclass SearchLeague extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: \"\",\n      search_results: [],\n      errors: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n\n    var searchData;\n\n    if (!isEmpty(this.state.search)) {\n      searchData = this.state.search;\n    }\n\n    await this.props.searchLeague(searchData).then(res => {\n            this.setState({ \n              search: \"\",\n              search_results: res \n            });\n          });\n  };\n\n  componentDidMount() {\n    this.props.searchLeague().then(res => {\n      this.setState({ search_results: res });\n    });\n  };\n\n  render() {\n    const{ errors } = this.state;\n\n    function checkPrivate(value) {\n      if( value === true) {\n        return \"Yes\"\n      } else {\n        return \"No\"\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>League</b> Search\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>\n              <div className=\"section\">\n                <div className=\"row\">\n                  <div className=\"input-field col s6 offset-s2\">\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.search}\n                      error={errors.search}\n                      id=\"search\"\n                      type=\"text\"\n                      className={classnames('', { invalid: errors.search })}\n                    />\n                    <label htmlFor=\"name\">Search</label>\n                    <span className=\"red-text\">{errors.search}</span>\n                  </div>\n                  <div className=\"col s1\" style={{ paddingLeft: \"11.250px\" }}>\n                    <button\n                      style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                      }}\n                      type=\"submit\"\n                      className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                        Search\n                      </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n            <table className=\"highlight minwidth: 650\" aria-label=\"simple table\">\n              <thead>\n                <tr>\n                  <th>League Name</th>\n                  <th className=\"center-align\">Max Players</th>\n                  <th className=\"center-align\">Starting Bankroll</th>\n                  <th className=\"center-align\">Leagues Supported</th>\n                  <th className=\"right-align\">Private</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.search_results.map(row => (\n                  <tr key={row._id}>\n                    <td component=\"th\" scope=\"row\">\n                      <Link to={`/joinLeague/${row._id}`} className=\"dash-link\">\n                        {row.name}\n                      </Link>\n                    </td>\n                    <td className=\"center-align\">{row.max_players}</td>\n                    <td className=\"center-align\">{row.starting_cash}</td>\n                    <td className=\"center-align\">\n                      {row.leagues_supported.map(sub_row => (\n                        <img className=\"search-match-tournament-img\" src={process.env.PUBLIC_URL + sub_row.tournament_logo} />\n                      ))}\n                    </td>\n                    <td className=\"right-align\">{checkPrivate(row.private)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchLeague.propTypes = {\n  searchLeague: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { searchLeague })(SearchLeague);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { searchMatch, searchMatchByDateRange } from \"../../actions/matchActions\";\nimport classnames from \"classnames\"\nimport queryString from \"query-string\"\n\nconst isEmpty = require(\"is-empty\");\n\nclass SearchMatch extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search: \"\",\n      search_results: [],\n      errors: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = async e => {\n    e.preventDefault();\n\n    var searchData;\n\n    if (!isEmpty(this.state.search)) {\n      searchData = this.state.search;\n    }\n\n    await this.props.searchMatch(searchData).then(res => {\n            this.setState({ \n              search: \"\",\n              search_results: res \n            });\n            console.log(this.state.search_results);\n          });\n          \n  };\n\n  renderPositiveOdds = odd => {\n    if(odd > 0) {\n      return `+${odd}`\n    } else {\n      return odd\n    }\n  };\n\n  renderMatchTime = datetime => {\n    let match_hour = (datetime.getHours() % 12);\n    let match_minute = (datetime.getMinutes() < 10) ? \"0\" + datetime.getMinutes() : datetime.getMinutes();\n    let match_trailer = (datetime.getHours() > 11) ? \" PM\" : \" AM\";\n    return match_hour + \":\" + match_minute + match_trailer;\n  };\n\n  UNSAFE_componentWillReceiveProps = nextProps => {\n    if(nextProps.location.key !== this.props.location.key) {\n      window.location.reload();\n    }\n  };\n\n  componentDidMount() {\n    const search_values = queryString.parse(this.props.location.search);\n    var search;\n\n    search_values.search === undefined ? search = null : search = search_values.search;\n    \n    this.props.searchMatch(search).then(res => {\n      this.setState({ search_results: res });\n    });\n  };\n\n  render() {\n\n    let match_date = new Date(this.state.match_date);\n    let match_hour = (match_date.getHours() % 12);\n    let match_minute = (match_date.getMinutes() < 10) ? \"0\" + match_date.getMinutes() : match_date.getMinutes();\n    let match_trailer = (match_date.getHours() > 11) ? \" PM\" : \" AM\";\n    let match_time = match_hour + \":\" + match_minute + match_trailer;\n\n    const{ errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s10 offset-s1\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>Match</b> Search\n              </h4>\n            </div>\n            <form noValidate onSubmit={this.onSubmit}>         \n                <div className=\"row\">\n                  <div className=\"input-field col s6 offset-s2\">\n                    <input\n                      onChange={this.onChange}\n                      value={this.state.search}\n                      error={errors.search}\n                      id=\"search\"\n                      type=\"text\"\n                      className={classnames('', { invalid: errors.search })}\n                    />\n                    <label htmlFor=\"name\">Search for a team, league, or match date</label>\n                    <span className=\"red-text\">{errors.search}</span>\n                  </div>\n                  <div className=\"col s1\">\n                    <button\n                      style={{\n                        width: \"150px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                      }}\n                      type=\"submit\"\n                      className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                        Search\n                      </button>\n                  </div>\n                </div>\n            </form>\n            <table className=\"long-table highlight\">\n              <thead className=\"long-table\">\n                <tr>\n                  <th>League</th>\n                  <th className=\"left-align\">Match Date</th>\n                  <th></th>\n                  <th className=\"center-align\">Match</th>\n                  <th></th>\n                  <th className=\"right-align\">Money Line</th>\n                  <th className=\"right-align\">Spread</th>\n                  <th className=\"right-align\"></th>\n                </tr>\n              </thead>\n              <tbody className=\"long-table\">\n                {this.state.search_results.map(row => (\n                  <tr key={row._id}>\n                    <td>\n                      <Link to={`/searchMatch?search=${row.tournament.name}`}>   \n                        <img className=\"search-match-tournament-img\" src={process.env.PUBLIC_URL + row.tournament.tournament_logo} />\n                      </Link>\n                    </td>\n                    <td>\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-datetime\">{new Date(row.match_date).toDateString()}</span>\n                      </div>\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-datetime\">{this.renderMatchTime(new Date(row.match_date))}</span>\n                      </div>\n                    </td>\n                    <td className=\"right-align\" component=\"th\" scope=\"row\">           \n                      <Link to={`/searchMatch?search=${row.home_team.short_name}`}> \n                        <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.home_team.logo_small} />\n                      </Link>\n                    </td>\n                    <td className=\"center-align\" component=\"th\" scope=\"row\">\n                      <span className=\"versus-small\"> vs. </span>\n                    </td>\n                    <td className=\"left-align\" component=\"th\" scope=\"row\">\n                      <Link to={`/searchMatch?search=${row.away_team.short_name}`}>   \n                        <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.away_team.logo_small} />\n                      </Link>\n                    </td>\n                    <td className=\"right-align\">\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-label\">{row.home_team.short_name}: </span> \n                        <span className={row.money_line_home > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderPositiveOdds(row.money_line_home)}</span> \n                      </div>\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-label\">{row.away_team.short_name}: </span>\n                        <span className={row.money_line_away > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderPositiveOdds(row.money_line_away)}</span>\n                      </div>\n                    </td>\n                    <td className=\"right-align\">\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-label\">{row.home_team.short_name}: </span> \n                        <span className={row.spread_home > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderPositiveOdds(row.spread_home/1000)} K</span> \n                      </div>\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-label\">{row.away_team.short_name}: </span>\n                        <span className={row.spread_away > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderPositiveOdds(row.spread_away/1000)} K</span>\n                      </div>\n                    </td>\n                    <td className=\"right-align\"><Link to={`/showMatch/${row._id}`}>Match Page</Link></td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearchMatch.propTypes = {\n  searchMatch: PropTypes.func.isRequired,\n  searchMatchByDateRange: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { searchMatch, searchMatchByDateRange })(SearchMatch);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { showMatch, updateMatchTeams } from \"../../actions/matchActions\";\nimport { getMyLeagues, showUserLeague } from \"../../actions/leagueActions\";\nimport { createWager } from \"../../actions/wagerActions\";\nimport classnames from \"classnames\"\nimport M from \"materialize-css\";\n\nclass ShowMatch extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      tournament: \"\",\n      home_team: \"\",\n      away_team: \"\",\n      money_line_home: \"\",\n      money_line_away: \"\",\n      spread_home: \"\",\n      spread_away: \"\",\n      winning_id: \"\",\n      losing_id: \"\",\n      gold_difference: \"\",\n      match_date: \"\",\n      my_leagues: [],\n      match_complete: false,\n      wager_info: \"\",\n      wager_league: \"\",\n      wager_amount: \"\",\n      available_funds: \"\",\n      errors: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onLeagueChange = e => {\n    this.setState({ \n      [e.target.id]: e.target.value\n    });\n\n    this.props.showUserLeague(e.target.value).then(res => {\n      this.setState({\n        available_funds: res.user_bankroll\n      });\n    });\n  }\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    var wager_type = this.state.wager_info.split(\"/\")[1];\n    var wager_team = this.state.wager_info.split(\"/\")[0];\n    var wager_odds;\n\n    if (wager_type === \"money_line\") {\n      if (wager_team === this.state.home_team._id) {\n        wager_odds = this.state.money_line_home;\n      } else {\n        wager_odds = this.state.money_line_away;\n      }\n    } else {\n      if (wager_team === this.state.home_team._id) {\n        wager_odds = this.state.spread_home;\n      } else {\n        wager_odds = this.state.spread_away;\n      }\n    }\n\n    const wagerData = {\n      wager_type: wager_type,\n      wager_team: wager_team,\n      wager_user_league: this.state.wager_league,\n      wager_amount: this.state.wager_amount,\n      wager_odds: wager_odds,\n      wager_match: this.props.match.params.match_id\n    }\n\n    this.props.createWager(wagerData, this.props.history);\n  };\n\n  getWinner = id => {\n    if (id === this.state.home_team._id) {\n      return this.state.home_team.logo_small;\n    } else {\n      return this.state.away_team.logo_small;\n    }\n  };\n\n  renderPositiveOdds = odd => {\n    if(odd > 0) {\n      return `+${odd}`\n    } else {\n      return odd\n    }\n  };\n\n  renderMoney = money => {\n    if (money === \"\") {\n      return\n    } else {\n      return `${money}g`\n    }\n  }\n\n  async componentDidMount() {\n\n    await this.props.updateMatchTeams(this.props.match.params.match_id);\n\n    await this.props.showMatch(this.props.match.params.match_id).then(res => {\n      this.setState({ \n        tournament: res.tournament,\n        home_team: res.home_team,\n        away_team: res.away_team,\n        money_line_home: res.money_line_home,\n        money_line_away: res.money_line_away,\n        spread_home: res.spread_home,\n        spread_away: res.spread_away,\n        winning_id: res.winning_id,\n        losing_id: res.losing_id,\n        gold_difference: res.gold_difference,\n        match_date: res.match_date\n      });\n    });\n\n    await this.props.getMyLeagues(this.props.auth.user.id).then(res => {\n      res.forEach(row => {\n        var items_processed = 0;\n        var leagues_supported =[];\n        row.league.leagues_supported.forEach(league_row => {\n          items_processed++;\n          leagues_supported = leagues_supported.concat(league_row.name);\n          if (items_processed === row.league.leagues_supported.length) {\n            if (leagues_supported.includes(this.state.tournament.name)) {\n              this.setState({\n                my_leagues: this.state.my_leagues.concat(row)\n              })\n            }\n          }\n        })\n      })\n    });\n\n    if (this.state.winning_id) {\n      this.setState({\n        match_complete: true\n      });\n    }\n    M.AutoInit();\n  };\n\n  render() {\n    const{ errors } = this.state;\n\n    let wager_section;\n    let match_date = new Date(this.state.match_date);\n    let match_hour = (match_date.getHours() % 12);\n    let match_minute = (match_date.getMinutes() < 10) ? \"0\" + match_date.getMinutes() : match_date.getMinutes();\n    let match_trailer = (match_date.getHours() > 11) ? \" PM\" : \" AM\";\n    let match_time = match_hour + \":\" + match_minute + match_trailer;\n    let home_logo = process.env.PUBLIC_URL + this.state.home_team.logo_large;\n    let away_logo = process.env.PUBLIC_URL + this.state.away_team.logo_large;\n\n    if (this.state.match_complete === false) {\n      wager_section = \n      <div className=\"section\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <h5 className=\"sub-title-show-match-wager\">\n              Place a wager\n            </h5>\n          </div>\n          <form noValidate onSubmit={this.onSubmit}>\n            <div className=\"row wager-info-container\">\n              <div className=\"input-field col s3\">\n                <select id=\"wager_info\" value={this.state.wager_info} onChange={this.onChange}>\n                  <option value=\"\" disabled selected>Team</option>\n                  <optgroup label=\"Money-Line\">\n                    <option value={this.state.home_team._id + \"/money_line\"}>{this.state.home_team.short_name}</option>\n                    <option value={this.state.away_team._id + \"/money_line\"}>{this.state.away_team.short_name}</option>\n                  </optgroup>\n                  <optgroup label=\"Spread\">\n                    <option value={this.state.home_team._id + \"/spread\"}>{this.state.home_team.short_name}</option>\n                    <option value={this.state.away_team._id + \"/spread\"}>{this.state.away_team.short_name}</option>\n                  </optgroup>\n                </select>\n                <label>Team and Type of Wager</label>\n              </div>\n              <div className=\"input-field col s3\">\n                <select id=\"wager_league\" value={this.state.wager_league} onChange={this.onLeagueChange}>\n                  <option value=\"\" disabled selected>League</option>\n                  {this.state.my_leagues.map(row => (\n                    <option value={row._id}>{row.league.name}</option>\n                  ))}\n                </select> \n                <label>League</label>\n              </div>\n              <div className=\"input-field inline col s3\">\n                <input\n                  onChange={this.onChange}\n                  value={this.state.wager_amount}\n                  error={errors.wager_amount}\n                  id=\"wager_amount\"\n                  type=\"number\"\n                  className={classnames('', { invalid: errors.wager_amount })}\n                />\n                <label htmlFor=\"amount\">Amount</label>\n                <span className=\"red-text\">{errors.amount}</span>\n              </div>\n              <div className=\"input-field inline col s3 available-funds\">\n                  <span className=\"available-funds\">Available Funds: {this.renderMoney(this.state.available_funds)}</span>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col s12 wager-submit-button\">\n                <button\n                  style={{\n                  width: \"200px\",\n                  borderRadius: \"1px\",\n                  letterSpacing: \"1px\",\n                }}\n                type=\"submit\"\n                className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                  Place Wager\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    } else {\n      wager_section = \n      <div className=\"section\">\n        <div className=\"row\">\n          <div className=\"col s5 offset-s1 winner-label\">\n            <span className=\"winner-label\">Match Winner: </span>\n          </div>\n          <div className=\"col s1\">\n            <img className=\"show-match-winner-img\" src={process.env.PUBLIC_URL + this.getWinner(this.state.winning_id)} />\n          </div>\n          <div className=\"col s4 gold-diff\">\n            <span className=\"gold-diff\"> ({this.renderPositiveOdds(this.state.gold_difference)})</span>\n          </div>\n        </div>\n      </div>\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>Match</b> Information\n              </h4>\n            </div>\n            <div className=\"row\">\n              <div className=\"section\">\n                <div className=\"col s4\">\n                    <img src={home_logo} alt=\"Home Team logo\" className=\"show-match-img\"/>\n                </div>\n                <div className=\"col s4\">\n                  <div className=\"section\">\n                    <div className=\"league-and-date-container\">\n                      <img className=\"show-match-tournament-img\" src={process.env.PUBLIC_URL + this.state.tournament.tournament_logo} />\n                      <div className=\"match-date\">\n                        {match_date.toDateString()}\n                      </div>\n                      <div className=\"match-time\">\n                        {match_time}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"divider\"></div>\n                </div>\n                <div className=\"col s4\">\n                    <img src={away_logo} alt=\"Away Team logo\" className=\"show-match-img\"/>\n                </div>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col s4\">\n                <div className=\"team-record\">\n                  <span className=\"record\" title=\"home-team-record\">{this.state.home_team.wins}-{this.state.home_team.losses}</span>\n                </div>\n              </div>\n              <div className=\"col s4\">\n                <span className=\"versus\">vs.</span>\n              </div>\n              <div className=\"col s4\">\n                <div className=\"team-record\">\n                  <span className=\"record\" title=\"away-team-record\">{this.state.away_team.wins}-{this.state.away_team.losses}</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"divider\"></div>\n            <div className=\"section\">\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  <span className=\"sub-title-show-match\"><b>Latest</b> Odds</span>\n                </div>\n                <div className=\"col s10 offset-s1\">\n                  <table className=\"striped\">\n                    <tbody>\n                      <tr key=\"spread\">\n                        <td className=\"right-align\">\n                          <div className={this.state.money_line_home > 0 ? \"odds-green\" : \"odds-red\"}>\n                            <div className=\"money-line\">\n                              <span className=\"money-line-odds\" title=\"money-line-odds\">{this.renderPositiveOdds(this.state.money_line_home)}</span>\n                            </div>\n                          </div>   \n                        </td>\n                        <td className=\"center-align\">\n                          <div className=\"odds-label\">\n                            <span className=\"money-line\">Money Line</span>\n                          </div>\n                        </td>\n                        <td className=\"left-align\">\n                          <div className={this.state.money_line_away > 0 ? \"odds-green\" : \"odds-red\"}>\n                            <div className=\"money-line\">\n                              <span className=\"money-line-odds\">{this.renderPositiveOdds(this.state.money_line_away)}</span>\n                            </div>\n                          </div> \n                        </td>\n                      </tr>\n                      <tr key=\"money-line\">\n                        <td className=\"right-align\">\n                          <div className={this.state.spread_home > 0 ? \"odds-green\" : \"odds-red\"}>\n                            <div className=\"spread\">\n                              <span className=\"spread-odds\" title=\"spread-odds\">{this.renderPositiveOdds(this.state.spread_home/1000)} K</span>\n                            </div>\n                          </div> \n                        </td>\n                        <td className=\"center-align\">\n                          <div className=\"odds-label\">\n                            <div className=\"row parenthesis\">\n                              <span className=\"spread\">Spread</span>\n                            </div> \n                            <div className=\"row parenthesis\">\n                              <span className=\"spread\">(Total Gold)</span>\n                            </div>\n                          </div>\n                        </td>\n                        <td className=\"left-align\">\n                          <div className={this.state.spread_away > 0 ? \"odds-green\" : \"odds-red\"}>\n                            <div className=\"spread\">\n                              <span className=\"spread-odds\">{this.renderPositiveOdds(this.state.spread_away/1000)} K</span>\n                            </div>\n                          </div> \n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>        \n            <div className=\"divider\"></div>\n            {wager_section}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nShowMatch.propTypes = {\n  showMatch: PropTypes.func.isRequired,\n  getMyLeagues: PropTypes.func.isRequired,\n  updateMatchTeams: PropTypes.func.isRequired,\n  createWager: PropTypes.func.isRequired,\n  showUserLeague: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { showMatch, getMyLeagues, createWager, updateMatchTeams, showUserLeague })(withRouter(ShowMatch));","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { sendForgotEmail } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ForgotPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const userData = {\r\n      email: this.state.email\r\n    };\r\n\r\n    this.props.sendForgotEmail(userData, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container\">\r\n        <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n          <div className=\"col s8 offset-s2\">\r\n            <Link to=\"/login\" className=\"btn-flat waves-effect\">\r\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to Login\r\n            </Link>\r\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n              <h4 className=\"header-text\">\r\n                <b>Reset</b> your password\r\n              </h4>\r\n            </div>\r\n            <form noValidate onSubmit={this.onSubmit}>\r\n              <div className=\"input-field col s12\">\r\n                <input\r\n                  onChange={this.onChange}\r\n                  value={this.state.email}\r\n                  error={errors.email}\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className={classnames(\"\", { invalid: errors.email || errors.emailnotfound })}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n                <span className=\"red-text\">\r\n                  {errors.email}\r\n                  {errors.emailnotfound}\r\n                </span>\r\n              </div>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <button\r\n                  style={{\r\n                    width: \"150px\",\r\n                    borderRadius: \"3px\",\r\n                    letterSpacing: \"1.5px\",\r\n                    marginTop: \"1rem\"\r\n                  }}\r\n                  type=\"submit\"\r\n                  className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\r\n                    Reset\r\n                  </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nForgotPassword.propTypes = {\r\n  sendForgotEmail: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { sendForgotEmail })(withRouter(ForgotPassword));","import React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { validateToken, updatePassword } from \"../../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nconst isEmpty = require(\"is-empty\");\r\n\r\nclass ResetPassword extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\",\r\n      errors: {}\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    const tokenData = {\r\n      resetPasswordToken: this.props.match.params.token\r\n    };\r\n\r\n    this.props.validateToken(tokenData).then(email => {\r\n      this.setState({\r\n        email: email\r\n      });\r\n    });\r\n  };\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({\r\n        errors: nextProps.errors\r\n      });\r\n    }\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    \r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      confirm_password: this.state.confirm_password\r\n    };\r\n\r\n    this.props.updatePassword(userData, this.props.history);\r\n  };\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    if (!isEmpty(errors)) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n            <div className=\"col s9 offset-s2\">\r\n              <Link to=\"/\" classname=\"btn-flat waves-effect\">\r\n                <i className=\"material-icons left\">keyboard_backspace</i> Back to Home\r\n              </Link>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <h4 className=\"header-text\">\r\n                  <b>Oops</b> Something went wrong\r\n                </h4>\r\n                <p className=\"grey-text text-darken-1\">\r\n                  Please try sending another email <Link to=\"/forgotPassword\">here.</Link>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container\">\r\n          <div style={{ marginTop: \"4rem\" }} className=\"row\">\r\n            <div className=\"col s9 offset-s2\">\r\n              <Link to=\"/\" className=\"btn-flat waves-effect\">\r\n                <i className=\"material-icons left\">keyboard_backspace</i> Back to Home\r\n              </Link>\r\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                <h4 className=\"header-text\">\r\n                  <b>Enter</b> a new password\r\n                </h4>\r\n                <p className=\"grey-text text-darken-1\">\r\n                  Here by mistake? <Link to=\"/login\">Log in here</Link>\r\n                </p>\r\n              </div>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.password}\r\n                    error={errors.password}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    className={classnames(\"\", { invalid: errors.password })}\r\n                  />\r\n                  <label htmlFor=\"password\">New Password</label>\r\n                  <span className=\"red-text\">\r\n                    {errors.password}\r\n                  </span>\r\n                </div>\r\n                <div className=\"input-field col s12\">\r\n                  <input\r\n                    onChange={this.onChange}\r\n                    value={this.state.confirm_password}\r\n                    error={errors.confirm_password}\r\n                    id=\"confirm_password\"\r\n                    type=\"password\"\r\n                    className={classnames(\"\", { invalid: errors.confirm_password })}\r\n                  />\r\n                  <label htmlFor=\"password\">Confirm New Password</label>\r\n                  <span className=\"red-text\">\r\n                    {errors.confirm_password}\r\n                  </span>\r\n                </div>\r\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\r\n                  <button\r\n                    style={{\r\n                      width: \"300px\",\r\n                      borderRadius: \"3px\",\r\n                      letterSpacing: \"1.5px\",\r\n                      marginTop: \"1rem\"\r\n                    }}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\r\n                      Confirm Password\r\n                    </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nResetPassword.propTypes = {\r\n  validateToken: PropTypes.func.isRequired,\r\n  updatePassword: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps, { validateToken, updatePassword })(withRouter(ResetPassword));\r\n","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { showLeague, joinLeague, getCurrentPlayers, checkCurrentUserMembership } from \"../../actions/leagueActions\";\nimport classnames from \"classnames\"\n\nclass JoinLeague extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: \"\",\n      game: \"\",\n      leagues_supported: [],\n      private: \"\",\n      current_player_count: \"\",\n      current_players: [],\n      max_players: \"\",\n      starting_cash: \"\",\n      in_progress: \"\",\n      season_in_progress: \"\",\n      private_league: \"\",\n      user_exists: false,\n      errors: {}\n    };\n  }\n\n  onChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const joinData = {\n      league_id: this.props.match.params.league_id,\n      user_id: this.props.auth.user.id\n    };\n\n    this.props.joinLeague(joinData, this.props.history);\n  };\n\n  async componentDidMount() {\n    const userData = {\n      league_id: this.props.match.params.league_id,\n      user_id: this.props.auth.user.id\n    };\n\n    await this.props.showLeague(this.props.match.params.league_id).then(res => {\n      this.setState({ \n        name: res.name,\n        game: res.game,\n        leagues_supported: res.leagues_supported,\n        private: res.private,\n        max_players: res.max_players,\n        starting_cash: res.starting_cash,\n        in_progress: res.in_progress\n      });\n    });\n\n    if (this.state.in_progress === true) {\n      this.setState({\n        season_in_progress: \"Yes\"\n      });\n    } else {\n      this.setState({\n        season_in_progress: \"No\"\n      });\n    }\n\n    if (this.state.private === true) {\n      this.setState({\n        private_league: \"Yes\"\n      });\n    } else {\n      this.setState({\n        private_league: \"No\"\n      });\n    }\n\n    await this.props.getCurrentPlayers(this.props.match.params.league_id).then(res => {\n      this.setState({\n        current_players: res,\n        current_player_count: res.length\n      });\n    });\n\n    await this.props.checkCurrentUserMembership(userData).then(res => {\n      this.setState({\n        user_exists: res\n      });\n    });\n  };\n\n  render() {\n    const{ errors } = this.state;\n\n    let button;\n    let table;\n\n    if ((this.state.private === false) && (this.state.max_players >= this.state.current_players) && (this.state.in_progress === false) && (this.state.user_exists === false)) {\n      button = <button\n                  style={{\n                    width: \"250px\",\n                    borderRadius: \"3px\",\n                    letterSpacing: \"1.5px\",\n                    marginTop: \"1rem\"\n                  }}\n                  type=\"submit\"\n                  className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                    Join League\n                </button>;\n    }\n\n    if ((this.state.current_players.length > 0)) {\n      table = <div className=\"section\">\n                <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                  <h5>\n                    <span className=\"sub-title\">Leaderboard</span>\n                  </h5>\n                </div>\n                <div className=\"col s6 offset-s3\">\n                  <table className=\"highlight minwidth: 650\" aria-label=\"simple table\">\n                    <thead>\n                      <tr>\n                        <th>Username</th>\n                        <th className=\"right-align\">% Change</th>\n                        <th className=\"right-align\">Current Gold</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.current_players.map(row => (\n                        <tr key={row.user_id}>\n                          <td component=\"th\" scope=\"row\" align=\"right\">\n                              <Link to={`/userProfile/${row.user_id}`}>{row.username}</Link>\n                          </td>\n                          <td className={row.bankroll_percent_change > 0 ? \"search-info-value-green right-align\" : \"search-info-value-red right-align\"}>{row.bankroll_percent_change}%</td>\n                          <td className=\"right-align\">{row.user_bankroll}g</td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <Link to=\"/dashboard\" className=\"btn-flat waves-effect\">\n              <i className=\"material-icons left\">keyboard_backspace</i> Back to home\n            </Link>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>League</b> Information\n              </h4>\n            </div>\n            <div className=\"section\">\n              <div className=\"row\">\n                {table}\n              </div>\n            </div>\n            <div className=\"divider\"></div>\n            <div className=\"section\">\n              <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n                <h5>\n                  <span className=\"sub-title\">Details</span>\n                </h5>\n              </div>\n              <div className=\"league-info\">\n                <div className=\"col s2\">\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      Name:\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      Game:\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      Tournaments:\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col s4 league-info-value-container\">\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.name}\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.game}\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.leagues_supported.map(row => (\n                        <img src={process.env.PUBLIC_URL + row.tournament_logo} className=\"dash-tournament-img\" />\n                      ))}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col s3 league-label-container\">\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      Players:\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      Starting Gold:\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      Private:\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-label\">\n                      In-Progress:\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col s3 league-info-value-container\">\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.current_player_count} / {this.state.max_players}\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.starting_cash}g\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.private_league}\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"league-info-value\">\n                      {this.state.season_in_progress}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              {button}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nJoinLeague.propTypes = {\n  joinLeague: PropTypes.func.isRequired,\n  showLeague: PropTypes.func.isRequired,\n  getCurrentPlayers: PropTypes.func.isRequired,\n  checkCurrentUserMembership: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { joinLeague, showLeague, getCurrentPlayers, checkCurrentUserMembership })(withRouter(JoinLeague));","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getMyLeagues, showLeague, getCurrentPlayers } from \"../../actions/leagueActions\";\n\n\nconst isEmpty = require(\"is-empty\");\n\nclass MyLeagues extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search_results: [],\n      errors: {}\n    };\n  }\n\n  async componentDidMount() {\n    await this.props.getMyLeagues(this.props.auth.user.id).then(res => {\n      res.forEach(row => {\n        this.props.getCurrentPlayers(row.league._id).then(player_res => {\n          this.props.showLeague(row.league._id).then(res => {\n            res.bankroll = row.user_bankroll;\n            res.bankroll_percent_change = row.bankroll_percent_change;\n            res.current_player_count = player_res.length;\n            this.setState({ \n              search_results: this.state.search_results.concat(res).sort((a, b) => (a.bankroll_percent_change < b.bankroll_percent_change) ? 1 : -1)\n            });\n          });\n        });\n      });\n    });\n  };\n\n  render() {\n    const{ errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s8 offset-s2\">\n            <div className=\"row col s12\">\n              <h4 className=\"header-text\">\n                <b>My</b> Leagues\n              </h4>\n            </div> \n            <div className=\"row\">\n              <div className=\"col s4 offset-s2\">\n                <Link to=\"/searchLeague\" className=\"btn btn-flat waves-light waves-effect hoverable nostra-button\">\n                  Search for League\n                </Link>\n              </div>\n              <div className=\"col s4\">\n                <Link to=\"/createLeague\" className=\"btn btn-flat waves-light waves-effect hoverable nostra-button\">\n                  Create League\n                </Link>\n              </div>\n            </div>\n            <div className=\"divider\"></div>\n            <table className=\"highlight long-table\">\n              <thead className=\"long-table\">\n                <tr>\n                  <th>League Name</th>\n                  <th className=\"center-align\">Number of Players</th>\n                  <th className=\"center-align\">Game</th>\n                  <th className=\"center-align\">Leagues Supported</th>\n                  <th className=\"center-align\">Current Bankroll</th>\n                  <th className=\"right-align\">Percent Change</th>\n                </tr>\n              </thead>\n              <tbody className=\"long-table\">\n                {this.state.search_results.map(row => (\n                  <tr key={row._id}>\n                    <td component=\"th\" scope=\"row\">\n                      <Link to={`/joinLeague/${row._id}`} className=\"dash-link\">\n                        {row.name}\n                      </Link>\n                    </td>\n                    <td className=\"center-align\">{row.current_player_count}</td>\n                    <td className=\"center-align\">{row.game}</td>\n                    <td className=\"center-align\">\n                      {row.leagues_supported.map(sub_row => (\n                        <span><img className=\"search-match-tournament-img\" src={process.env.PUBLIC_URL + sub_row.tournament_logo} /> </span>\n                      ))}\n                    </td>\n                    <td className=\"center-align\">{row.bankroll}</td>\n                    <td className={row.bankroll_percent_change > 0 ? \"search-info-value-green right-align\" : \"search-info-value-red right-align\"}>{row.bankroll_percent_change}%</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMyLeagues.propTypes = {\n  getMyLeagues: PropTypes.func.isRequired,\n  showLeague: PropTypes.func.isRequired,\n  getCurrentPlayers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getMyLeagues, showLeague, getCurrentPlayers })(MyLeagues);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getMyWagers, getLeagueInfo } from \"../../actions/wagerActions\";\n\nclass MyWagers extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      search_results: [],\n      errors: {}\n    };\n  }\n\n  renderOdds = (odd_type, odd) => {\n    if(odd > 0 && odd_type === \"spread\") {\n      return `+${odd/1000} K`;\n    } else if (odd < 0 && odd_type === \"spread\") {\n      return `${odd/1000} K`;\n    } else if (odd > 0) {\n      return `+${odd}`;\n    } else {\n      return odd;\n    }\n  };\n\n  renderOddType = (odd_type) => {\n    if (odd_type === \"spread\") {\n      return \"Spread\";\n    } else {\n      return \"Money Line\";\n    }\n  };\n\n  renderWin = (win, complete) => {\n    if (complete === null) {\n      return \"Open\"\n    } else {\n      if(win === true) {\n        return \"Yes\"\n      } else {\n        return \"No\"\n      }\n    }\n  };\n\n  async componentDidMount() {\n    await this.props.getMyWagers(this.props.auth.user.id).then(res => {\n      res.forEach(row => {\n        this.props.getLeagueInfo(row.user_league_id).then(user_league => {\n          row.league_name = user_league.league.name;\n          row.league_id = user_league.league._id;\n          if (row.team_id === row.match.home_team._id) {\n            row.team_logo = row.match.home_team.logo_small;\n          } else {\n            row.team_logo = row.match.away_team.logo_small;\n          }\n          this.setState({\n            search_results: this.state.search_results.concat(row)\n          });\n          console.log(this.state.search_results);\n        });\n      });\n    });\n  };\n\n  render() {\n    const{ errors } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s10 offset-s1\">\n            <div className=\"col s12\" style={{ paddingLeft: \"11.250px\" }}>\n              <h4 className=\"header-text\">\n                <b>My</b> Wagers\n              </h4>\n            </div>\n            <table className=\"highlight long-table-wager\">\n              <thead className=\"long-table-wager\">\n                <tr>\n                  <th>League Name</th>\n                  <th></th>\n                  <th className=\"center-align\">Match</th>\n                  <th></th>\n                  <th className=\"right-align\">Amount</th>\n                  <th className=\"right-align\">Team</th>\n                  <th className=\"right-align\">Odds</th>\n                  <th className=\"right-align\">Win</th>\n                </tr>\n              </thead>\n              <tbody className=\"long-table-wager\">\n                {this.state.search_results.map(row => (\n                  <tr key={row.league_id}>\n                    <td component=\"th\" scope=\"row\">\n                      <Link to={`/joinLeague/${row.league_id}`} className=\"dash-link\">\n                        {row.league_name}\n                      </Link>\n                    </td>\n                    <td className=\"right-align\" component=\"th\" scope=\"row\">\n                      <Link to={`showMatch/${row.match_id}`} className=\"dash-link\">\n                        <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.home_team.logo_small} />\n                      </Link>\n                    </td>\n                    <td className=\"center-align\" conponent=\"th\" scopt=\"row\">\n                      <Link to={`showMatch/${row.match_id}`} className=\"dash-link\">\n                        <span className=\"versus-small\">vs.</span>\n                      </Link>\n                    </td>\n                    <td className=\"left-align\" component=\"th\" scope=\"row\">\n                      <Link to={`showMatch/${row.match_id}`} className=\"dash-link\">\n                        <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.away_team.logo_small} />\n                      </Link>\n                    </td>\n                    <td className=\"right-align\">{row.amount}g</td>\n                    <td className=\"right-align\"><img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.team_logo} /></td>\n                    <td className=\"right-align\">\n                      <div className=\"row search-info-row-container\">\n                        <span className=\"search-info-label\">{this.renderOddType(row.wager_type)}</span>\n                      </div>\n                      <div className=\"row search-info-row-container\"> \n                        <span className={row.odds > 0 ? \"search-info-value-green\" : \"search-info-value-red\"}>{this.renderOdds(row.wager_type, row.odds)}</span> \n                      </div>\n                    </td>\n                    <td className=\"right-align\">{this.renderWin(row.win, row.closed)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nMyWagers.propTypes = {\n  getMyWagers: PropTypes.func.isRequired,\n  getLeagueInfo: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getMyWagers, getLeagueInfo })(MyWagers);","import React, { Component } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getMyLeagues, showLeague } from \"../../actions/leagueActions\";\nimport { getTopWins, getTopLosses, getLeagueInfo } from \"../../actions/wagerActions\";\nimport { showUser, getFollowers, checkFollowed, followUser, unfollowUser } from \"../../actions/userActions\";\nimport { showTeam } from \"../../actions/teamActions\";\n\n\nclass UserProfile extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      wager_wins_search_results: [],\n      wager_wins_empty: false,\n      wager_losses_search_results: [],\n      wager_losses_empty: false,\n      league_search_results: [],\n      leagues_empty: false,\n      follower_results: [],\n      username: \"\",\n      status: \"\",\n      earnings: \"\",\n      favorite_team_logo: \"\",\n      is_followed: false,\n      lifetime_earnings_cash: \"\",\n      lifetime_earnings_pct: \"\",\n      errors: {}\n    };\n  }\n\n  onFollowClick = e => {\n    e.preventDefault();\n    const followData = {\n      follower_id: this.props.auth.user.id,\n      followee_id: this.props.match.params.user_id\n    };\n    this.props.followUser(followData, this.props.history);\n  }\n\n  onUnfollowClick = e => {\n    e.preventDefault();\n    const followData = {\n      follower_id: this.props.auth.user.id,\n      followee_id: this.props.match.params.user_id\n    };\n    this.props.unfollowUser(followData, this.props.history);\n  }\n\n  renderOdds = (odd_type, odd) => {\n    if(odd > 0 && odd_type === \"spread\") {\n      return `+${odd/1000} K`;\n    } else if (odd < 0 && odd_type === \"spread\") {\n      return `${odd/1000} K`;\n    } else if (odd > 0) {\n      return `+${odd}`;\n    } else {\n      return odd;\n    }\n  };\n\n  renderOddType = odd_type => {\n    if (odd_type === \"spread\") {\n      return \"Spread\";\n    } else {\n      return \"Money Line\";\n    }\n  };\n\n  getOpponent = (id, home_team, home_team_logo, away_team_logo) => {\n    if (id === home_team) {\n      return away_team_logo;\n    } else {\n      return home_team_logo;\n    }\n  };\n\n  UNSAFE_componentWillReceiveProps = nextProps => {\n    if(nextProps.location.key !== this.props.location.key) {\n      window.location.reload();\n    }\n  }\n\n  componentDidMount() {\n\n    this.props.checkFollowed(this.props.auth.user.id, this.props.match.params.user_id).then(res => {\n      if (res > 0) {\n        this.setState({\n          is_followed: true\n        });\n      } else if (this.props.auth.user.id === this.props.match.params.user_id) {\n        this.setState({\n          is_followed: null\n        });\n      }\n    });\n\n    this.props.showUser(this.props.match.params.user_id).then(res => {\n      if (res.favorite_team === null || res.favorite_team === undefined) {\n        this.setState({\n          username: res.username,\n          status: res.status,\n          favorite_team_logo: \"/lcs/lcs_logo.png\"\n        });\n      } else {\n        this.props.showTeam(res.favorite_team).then(team_res => {\n          this.setState({\n            username: res.username,\n            status: res.status,\n            favorite_team_logo: team_res.logo_large\n          });\n        });\n      }\n    });\n\n    this.props.getFollowers(this.props.match.params.user_id).then(res => {\n      console.log(res);\n      res.forEach(row => {\n        this.props.showUser(row.follower_id).then(user_info => {\n          user_info.favorite = row.favorite\n          this.setState({\n            follower_results: this.state.follower_results.concat(user_info).sort((a, b) => (a.favorite < b.favorite) ? 1 : -1)\n          });\n        });\n      });\n    });\n\n    this.props.getMyLeagues(this.props.match.params.user_id).then(res => {\n      if (res.length === 0) {\n        this.setState({\n          leagues_empty: true\n        });\n      }\n      var lifetime_starting_cash = 0;\n      var lifetime_bankroll = 0;\n      res.forEach(row => {\n        this.props.showLeague(row.league._id).then(res => {\n          res.bankroll = row.user_bankroll;\n          res.bankroll_percent_change = row.bankroll_percent_change;\n\n          lifetime_bankroll = lifetime_bankroll + row.user_bankroll;\n          lifetime_starting_cash = lifetime_starting_cash + res.starting_cash;\n        \n          this.setState({ \n            league_search_results: this.state.league_search_results.concat(res).sort((a, b) => (a.bankroll_percent_change < b.bankroll_percent_change) ? 1 : -1),\n            lifetime_earnings_cash: lifetime_bankroll - lifetime_starting_cash,\n            lifetime_earnings_pct: ((lifetime_bankroll - lifetime_starting_cash)/lifetime_starting_cash*100).toFixed(2),\n          });\n        });\n      });\n    });\n\n    this.props.getTopWins(this.props.match.params.user_id).then(res => {\n      if (res.length === 0) {\n        this.setState({\n          wager_wins_empty: true\n        });\n      }\n      res.forEach(row => {\n        this.props.getLeagueInfo(row.user_league_id).then(user_league => {\n          row.league_name = user_league.league.name;\n          row.league_id = user_league.league._id;\n          if (row.team_id === row.match.home_team._id) {\n            row.team_logo = row.match.home_team.logo_small;\n          } else {\n            row.team_logo = row.match.away_team.logo_small;\n          }\n          this.setState({\n            wager_wins_search_results: this.state.wager_wins_search_results.concat(row)\n          });\n        });\n      });\n    });\n\n    this.props.getTopLosses(this.props.match.params.user_id).then(res => {\n      if (res.length === 0) {\n        this.setState({\n          wager_losses_empty: true\n        });\n      }\n      res.forEach(row => {\n        this.props.getLeagueInfo(row.user_league_id).then(user_league => {\n          row.league_name = user_league.league.name;\n          row.league_id = user_league.league._id;\n          if (row.team_id === row.match.home_team._id) {\n            row.team_logo = row.match.home_team.logo_small;\n          } else {\n            row.team_logo = row.match.away_team.logo_small;\n          }\n          this.setState({\n            wager_losses_search_results: this.state.wager_losses_search_results.concat(row)\n          });\n        });\n      });\n    });\n\n  };\n\n  render() {\n    var league_table;\n    var wager_win_table;\n    var wager_loss_table;\n    var follow_button;\n\n    if (this.state.is_followed === false) {\n      follow_button =\n                    <button\n                      style={{\n                        width: \"200px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                      }}\n                      onClick={this.onFollowClick}\n                      className=\"btn btn-flat waves-effect waves-light hoverable nostra-button\">\n                        Follow User\n                    </button>;\n    } else if (this.state.is_followed === true) {\n      follow_button =\n                    <button\n                      style={{\n                        width: \"200px\",\n                        borderRadius: \"3px\",\n                        letterSpacing: \"1.5px\",\n                        marginTop: \"1rem\"\n                      }}\n                      onClick={this.onUnfollowClick}\n                      className=\"btn btn-flat waves-effect waves-light hoverable nostra-button-unfollow\">\n                        Unfollow User\n                    </button>;\n    }\n\n    if (this.state.wager_wins_empty === true) {\n      wager_win_table = \n                    <div className=\"section\">\n                      <div className=\"row\">\n                        <span className=\"flow-text dash-info-text\">\n                          This user hasn't won any wagers yet, check back soon.\n                        </span>\n                      </div>\n                    </div>\n    } else {      \n      wager_win_table = <table className=\"highlight dash-table-center\">\n                      <thead>\n                        <tr>\n                          <th>Pick</th>\n                          <th className=\"center-align\">Amount</th>\n                          <th></th>\n                          <th className=\"center-align\">Match</th>\n                          <th></th>\n                          <th className=\"center-align\">Odds</th>\n                          <th className=\"right-align\">Payout</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.wager_wins_search_results.map(row => (\n                          <tr className=\"dash-row\" key={row._id}>\n                            <td className=\"left-align\">\n                              <Link to={`/showMatch/${row.match_id}`}>\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.team_logo} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">{row.amount}g</td>\n                            <td className=\"right-align\" component=\"th\" scope=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.home_team.logo_small} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\" conponent=\"th\" scopt=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <span className=\"versus-small\">vs.</span>\n                              </Link>\n                            </td>\n                            <td className=\"left-align\" component=\"th\" scope=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.away_team.logo_small} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">\n                              <div className=\"row dash-text-container\">\n                                <span className=\"dash-spread-label\">{this.renderOddType(row.wager_type)}</span>\n                              </div>\n                              <div className=\"row dash-text-container\"> \n                                <span className={row.odds > 0 ? \"dash-info-value-green\" : \"dash-info-value-red\"}>{this.renderOdds(row.wager_type, row.odds)}</span> \n                              </div>\n                            </td>\n                            <td className=\"right-align\">{(row.payout-row.amount)}g</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>;\n    }\n\n    if (this.state.wager_losses_empty === true) {\n      wager_loss_table = \n                    <div className=\"section\">\n                      <div className=\"row\">\n                        <span className=\"flow-text dash-info-text\">\n                          This user hasn't lost any wagers yet, ask them for a tip!\n                        </span>\n                      </div>\n                    </div>\n    } else {      \n      wager_loss_table = <table className=\"highlight dash-table-center\">\n                      <thead>\n                        <tr>\n                          <th>Pick</th>\n                          <th className=\"center-align\">Amount</th>\n                          <th></th>\n                          <th className=\"center-align\">Match</th>\n                          <th></th>\n                          <th className=\"center-align\">Odds</th>\n                          <th className=\"right-align\">Loss</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {this.state.wager_losses_search_results.map(row => (\n                          <tr className=\"dash-row\" key={row._id}>\n                            <td className=\"left-align\">\n                              <Link to={`/showMatch/${row.match_id}`}>\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.team_logo} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">{row.amount}g</td>\n                            <td className=\"right-align\" component=\"th\" scope=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.home_team.logo_small} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\" conponent=\"th\" scopt=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <span className=\"versus-small\">vs.</span>\n                              </Link>\n                            </td>\n                            <td className=\"left-align\" component=\"th\" scope=\"row\">\n                              <Link to={`/showMatch/${row.match_id}`} className=\"dash-link\">\n                                <img className=\"search-match-img\" src={process.env.PUBLIC_URL + row.match.away_team.logo_small} />\n                              </Link>\n                            </td>\n                            <td className=\"center-align\">\n                              <div className=\"row dash-text-container\">\n                                <span className=\"dash-spread-label\">{this.renderOddType(row.wager_type)}</span>\n                              </div>\n                              <div className=\"row dash-text-container\"> \n                                <span className={row.odds > 0 ? \"dash-info-value-green\" : \"dash-info-value-red\"}>{this.renderOdds(row.wager_type, row.odds)}</span> \n                              </div>\n                            </td>\n                            <td className=\"right-align dash-info-value-red\">-({row.amount})g</td>\n                          </tr>\n                        ))}\n                      </tbody>\n                    </table>;\n    }\n\n    if ((this.state.leagues_empty === false)) {\n      league_table =  <div className=\"row\">\n                        <Link className=\"dash-link\" to='/searchLeague'>\n                          <h4 className=\"profile-sub-title\">\n                            Leagues\n                          </h4>\n                        </Link>\n                        <table className=\"striped\">\n                          <tbody>\n                            {this.state.league_search_results.map(row => (\n                              <tr className=\"dash-row\" key={row._id}>\n                                <td className=\"dash-league-name\" component=\"th\" scope=\"row\">\n                                  <Link className=\"dash-link\" to={`/joinLeague/${row._id}`}>\n                                    {row.name}\n                                  </Link>\n                                </td>\n                                <td className={row.bankroll_percent_change > 0 ? \"dash-info-value-green center-align\" : \"dash-info-value-red center-align\"}>{row.bankroll_percent_change}%</td>\n                              </tr>\n                            ))}\n                          </tbody>\n                        </table>\n                      </div>\n    }\n\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col s12 center-align\">\n            <h4 className=\"header-text\">\n              <b>User</b> Profile\n            </h4>\n            <div className=\"divider\"></div>\n            <div className=\"section\">\n              <div className=\"row\">\n                <div className=\"profile-info-container col s3\">\n                  <div className=\"row\"> \n                    <img className=\"profile-team-img\" src={process.env.PUBLIC_URL + this.state.favorite_team_logo} />                 \n                    <h5 className=\"username-header\">\n                      {this.state.username}\n                    </h5>                    \n                  </div>\n                  <div className=\"row\">\n                    <span className=\"user-status\">\n                      <b>Status:</b> {this.state.status}\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    <span className=\"user-status\">\n                      <b>Total Earnings:</b> <span className={this.state.lifetime_earnings_cash > 0 ? \"dash-info-value-green\" : \"dash-info-value-red\"}>{this.renderOdds(\"none\", this.state.lifetime_earnings_cash)}g <br/>({this.renderOdds(\"none\", this.state.lifetime_earnings_pct)}%)</span>\n                    </span>\n                  </div>\n                  <div className=\"row\">\n                    {follow_button}\n                  </div>\n                  <div className=\"divider\" />\n                  {league_table}\n                  <div className=\"divider\" />\n                  <div className=\"row\">\n                    <h4 className=\"profile-sub-title\">\n                      Followers\n                    </h4>\n                    <div className=\"follower-table-container\">\n                      <table className=\"striped long-table\">\n                        <thead className=\"long-table\">\n                        </thead>\n                        <tbody className=\"long-table\">\n                          {this.state.follower_results.map(row => (\n                            <tr className=\"dash-row\" key={row._id}>\n                              <td className=\"left-align\">\n                                <Link className=\"dash-link\" to={`/userProfile/${row._id}`}>\n                                  {row.username}\n                                </Link>\n                              </td>\n                              <td className=\"center-align\">\n                                {(row.favorite === true) ? <i class=\"material-icons\">star</i> : <i class=\"material-icons\">star_border</i>}\n                              </td>\n                            </tr>\n                          ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"user-profile-table-container col s9\">\n                  <h4 className=\"profile-sub-title\">\n                    Biggest Wins\n                  </h4>\n                  {wager_win_table}\n                  <div className=\"divider\"></div>\n                  <h4 className=\"profile-sub-title\">\n                    Biggest Losses\n                  </h4>                 \n                  {wager_loss_table}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n\n  }\n\n}\n\nUserProfile.propTypes = {\n  getMyLeagues: PropTypes.func.isRequired,\n  showLeague: PropTypes.func.isRequired,\n  getLeagueInfo: PropTypes.func.isRequired,\n  getTopWins: PropTypes.func.isRequired,\n  getTopLosses: PropTypes.func.isRequired,\n  showUser: PropTypes.func.isRequired,\n  showTeam: PropTypes.func.isRequired,\n  checkFollowed: PropTypes.func.isRequired,\n  followUser: PropTypes.func.isRequired,\n  unfollowUser: PropTypes.func.isRequired,\n  getFollowers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { getMyLeagues, showLeague, getTopWins, getTopLosses, getLeagueInfo, showTeam, showUser, getFollowers, checkFollowed, followUser, unfollowUser })(withRouter(UserProfile));","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport 'materialize-css/dist/css/materialize.min.css';\n\n\nimport { Provider } from \"react-redux\"\nimport store from \"./store\";\n\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport EmailSent from \"./components/auth/EmailSent\";\nimport PrivateRoute from \"./components/private-route/PrivateRoute\";\nimport Dashboard from \"./components/dashboard/NewDashboard\";\nimport CreateLeague from \"./components/league/CreateLeague\";\nimport SearchLeague from \"./components/league/SearchLeague\";\nimport SearchMatch from \"./components/match/SearchMatch\";\nimport ShowMatch from \"./components/match/ShowMatch\";\n\nimport \"./App.css\";\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ResetPassword from './components/auth/ResetPassword';\nimport JoinLeague from './components/league/JoinLeague';\nimport MyLeagues from './components/league/MyLeagues';\nimport MyWagers from './components/wager/MyWagers';\nimport UserProfile from './components/user/UserProfile';\n\n//Check fro token to keep user logged in\nif (localStorage.jwtToken) {\n  //Set auth token header auth\n  const token = localStorage.jwtToken;\n  setAuthToken(token);\n  //Decode token and get user info and exp\n  const decoded = jwt_decode(token);\n  //Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n\n  //Check if token is expired\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    //Logout user\n    store.dispatch(logoutUser());\n    window.location.href = \"./login\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\n            <Route exact path=\"/reset/:token\" component={ResetPassword} />\n            <Route exact path=\"/emailSent\" component={EmailSent} />\n            <Switch>\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute exact path=\"/createLeague\" component={CreateLeague} />\n              <PrivateRoute exact path=\"/searchLeague\" component={SearchLeague} />\n              <PrivateRoute exact path=\"/joinLeague/:league_id\" component={JoinLeague} />\n              <PrivateRoute exact path=\"/myLeagues\" component={MyLeagues} />\n              <PrivateRoute exact path=\"/searchMatch\" component={SearchMatch} />\n              <PrivateRoute exact path=\"/showMatch/:match_id\" component={ShowMatch} />\n              <PrivateRoute exact path=\"/myWagers\" component={MyWagers} />\n              <PrivateRoute exact path=\"/userProfile/:user_id\" component={UserProfile} />\n            </Switch>\n          </div>\n        </Router> \n      </Provider> \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}